<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.board.mapper.BoardMapper">

	<!-- 게시글 전체count -->
	<select id="getBoardCount" parameterType="hashmap" resultType="com.api.board.domain.Lgec_Mkt_User_Count">

SELECT 'target' TITLE, COUNT(*) COUNT
FROM (
SELECT * FROM lgec_mkt_user
WHERE promo_num = #{inflow}
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND dbsts = 'A'
ORDER BY USER_NUM DESC
) a
union all
SELECT 'difference' TITLE, IFNULL(sum(case when promo_num = #{inflow} then 1 else 0 end),0) - IFNULL(sum(case when promo_num = #{provide} then 1 else 0 end),0) as COUNT
FROM lgec_mkt_user
WHERE promo_num in ( #{inflow},  #{provide})
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND dbsts = 'A'
UNION ALL
SELECT '2번이상', 9999999
union all
SELECT ECUSERID, CNT FROM (
SELECT ECUSERID, COUNT(*) AS CNT FROM LGEC_MKT_USER
WHERE PROMO_NUM = #{inflow}
AND DATE_FORMAT(CREDATE,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND dbsts = 'A'
GROUP BY ECUSERID
) TEMP
WHERE TEMP.CNT >= 2
union all
SELECT '중복제거후' title, 9999999
union all
SELECT ecuserid, COUNT(*) FROM lgec_mkt_user
WHERE promo_num = #{inflow}
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN '202107051100' AND #{end}
AND dbsts = 'A'
GROUP BY ecuserid
HAVING COUNT(*) > 1
union all
SELECT '지급개수확인', 9999999
union all
SELECT 0, count(*) FROM lgec_mkt_user
WHERE promo_num = #{provide}
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND dbsts = 'A'
union all
SELECT '중복지급확인',9999999
union all
SELECT 0, COUNT(*) FROM lgec_mkt_user
WHERE promo_num = #{provide}
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN '202107051100' AND #{end}
AND dbsts = 'A'
GROUP BY ecuserid
HAVING COUNT(*) > 1

	</select>

	<!-- 3회 이상은 모두 D -->
	<delete id="updateMkt_3" parameterType="hashmap" >

UPDATE lgec_mkt_user
SET dbsts = 'D'
, upddate = NOW()
, upduser = 'HANGBOT-16608'
WHERE promo_num = #{inflow}
AND DATE_FORMAT(CREDATE,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND ecuserid IN (
SELECT ECUSERID
FROM (
SELECT ECUSERID, CNT FROM (
SELECT ECUSERID, COUNT(*) AS CNT FROM LGEC_MKT_USER
WHERE PROMO_NUM = #{inflow}
AND DATE_FORMAT(CREDATE,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND dbsts = 'A'
GROUP BY ECUSERID
) TEMP
WHERE TEMP.CNT >= 3
ORDER BY CNT DESC
) a
)
	</delete>
	<!-- 2회 하나만 D -->
	<delete id="updateMkt_2" parameterType="hashmap" >
UPDATE lgec_mkt_user
SET dbsts = 'D'
, upddate = NOW()
, upduser = 'HANGBOT-16608'
WHERE promo_num = #{inflow}
AND user_num IN (
SELECT user_num FROM (
SELECT USER_NUM, AA.ECUSERID, AA.CREDATE
,CASE @GROUPING WHEN ECUSERID THEN @RANKT := @RANK + 1 ELSE @RANK := 1 END AS RANKING
,@GROUPING := ECUSERID
FROM (SELECT USER_NUM, AA.ECUSERID, AA.CREDATE
FROM LGEC_MKT_USER AA JOIN (SELECT ECUSERID FROM LGEC_MKT_USER
WHERE PROMO_NUM = #{inflow}
AND dbsts = 'A'
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
GROUP BY ECUSERID
HAVING COUNT(*) > 1) BB
ON AA.ECUSERID = BB.ECUSERID
WHERE AA.PROMO_NUM = #{inflow}
AND DATE_FORMAT(AA.credate,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND AA.dbsts = 'A') AA, (SELECT @GROUPING := '', @RANK := 0) XX
ORDER BY ECUSERID, CREDATE DESC
) CC
WHERE CC.RANKING >= 2
)
	</delete>
	<!-- target count -->
	<select id="getTargetCount" parameterType="hashmap" resultType="int">
SELECT ifnull(sum(case when promo_num = #{inflow} then 1 else 0 end),0) as a
FROM lgec_mkt_user
WHERE promo_num in ( #{inflow})
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND dbsts = 'A'
;
	</select>

	<select id="getProvideCount" parameterType="hashmap" resultType="int">
SELECT ifnull(sum(case when promo_num = #{provide} then 1 else 0 end),0) as b
FROM lgec_mkt_user
WHERE promo_num in ( #{provide})
AND DATE_FORMAT(credate,'%Y%m%d%H%i') BETWEEN #{start} AND #{end}
AND dbsts = 'A'
;
	</select>
	<!-- 게시글 목록 조회 -->
	<select id="getBoardList" resultType="com.api.board.domain.Board">
	                                     
		SELECT *
		FROM ( 
				SELECT BOARD_SEQ 
					 , BOARD_RE_REF 
					 , BOARD_RE_LEV 
					 , BOARD_RE_SEQ 
					 , BOARD_WRITER 
					 , BOARD_SUBJECT 
					 , BOARD_CONTENT 
					 , BOARD_HITS
					 , DEL_YN 
					 , INS_USER_ID
					 , CAST( DATE_FORMAT( INS_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS INS_DATE
					 , UPD_USER_ID
					 , CAST( DATE_FORMAT( UPD_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS UPD_DATE  
			   FROM BOARD.TB_BOARD
		       ORDER BY BOARD_RE_REF DESC, BOARD_RE_SEQ ASC
			  ) T1
		 
	</select>

	<!-- 게시글 상세 조회  -->
	<select id="getBoardDetail" parameterType="int" resultType="com.api.board.domain.Board">
	
		SELECT T1.*
		  FROM (
					SELECT BOARD_SEQ 
						 , BOARD_RE_REF 
					 	 , BOARD_RE_LEV 
					 	 , BOARD_RE_SEQ 
					 	 , BOARD_WRITER 
					 	 , BOARD_SUBJECT 
					 	 , BOARD_CONTENT 
					 	 , BOARD_HITS
					 	 , DEL_YN 
					 	 , INS_USER_ID
					 	 , CAST( DATE_FORMAT( INS_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS INS_DATE
					 	 , UPD_USER_ID
					 	 , CAST( DATE_FORMAT( UPD_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS UPD_DATE  
				  	  FROM BOARD.TB_BOARD
				 	 WHERE BOARD_SEQ = #{board_seq}		
		        ) T1		
	
	</select>

	<!-- 게시글 등록  -->
	<insert id="insertBoard" parameterType="com.api.board.domain.Board">

		<selectKey resultType="int" keyProperty="board_seq" order="AFTER">

			SELECT LAST_INSERT_ID()

		</selectKey>

		INSERT
		INTO BOARD.TB_BOARD
		(
		BOARD_RE_REF
		, BOARD_RE_LEV
		, BOARD_RE_SEQ
		, BOARD_WRITER
		, BOARD_SUBJECT
		, BOARD_CONTENT
		, INS_USER_ID
		, INS_DATE
		, UPD_USER_ID
		, UPD_DATE
		)
		VALUES
		(
		0
		, 0
		, 0
		, #{board_writer}
		, #{board_subject}
		, #{board_content}
		, 'TEST'
		, NOW()
		, 'TEST'
		, NOW()
		)

	</insert>

	<!-- 게시글 수정 -->
	<delete id="updateBoard" parameterType="com.api.board.domain.Board">
	
		UPDATE BOARD.TB_BOARD 
		   SET BOARD_SUBJECT = #{board_subject}
		     , BOARD_CONTENT = #{board_content}
		     , UPD_USER_ID = 'TEST'
		     , UPD_DATE = NOW()
 		WHERE BOARD_SEQ = #{board_seq}
	
	</delete>

	<!-- 게시글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
	
		DELETE 
		  FROM BOARD.TB_BOARD 
		 WHERE BOARD_SEQ = #{board_seq}
	
	</delete>

</mapper>